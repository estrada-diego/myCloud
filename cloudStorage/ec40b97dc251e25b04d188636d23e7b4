require("dotenv").config();
const express = require("express");
const bodyParser = require("body-parser");
const nodemailer = require("nodemailer");
const cors = require("cors");
const multer = require("multer");


const upload = multer();
const app = express();
const PORT = 3000;
app.use(express.urlencoded({ extended: true }));


app.post("/contact", upload.none(), async (req, res) => {
    const { name, email, message } = req.body;
  
    // 1. Validate inputs
    if (!name || !email || !message) {
      return res.status(400).json({ error: "All fields are required" });
    }
  
    try {
      // 2. Create transporter (configure with your email service)
      let transporter = nodemailer.createTransport({
        service: "gmail",
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASS, 
          
        },
      });
      console.log("Email user:", process.env.EMAIL_USER);
      console.log("Email pass set:", !!process.env.EMAIL_PASS);
  
      // 3. Define the email content
      let mailOptions = {
        from: email, 
        to: process.env.EMAIL_USER, 
        subject: `Portfolio Contact Form: ${name}`,
        text: message,
      };
  
      await transporter.sendMail(mailOptions);
  
      res.json({ success: true, message: "Email sent successfully!" });
    } catch (err) {
      console.error(err);
      res.status(500).json({ error: "Failed to send email" });
    }
  });
  app.use(cors({
    origin: "https://www.cs.utexas.edu/~diegoes/", // or specify your domain, e.g. "https://www.cs.utexas.edu"
    methods: ["POST"]
  }));
  app.listen(PORT, () => {
    console.log(`Server running at http://localhost:${PORT}`);
  });